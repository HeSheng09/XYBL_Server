<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.xybl.server.dao.UserDao">
    <resultMap id="baseMap" type="com.xybl.server.entity.User">
        <id column="t_user_id" jdbcType="VARCHAR" property="id"/>
        <result column="t_user_name" jdbcType="VARCHAR" property="name"/>
        <result column="t_user_pwd" jdbcType="VARCHAR" property="pwd"/>
        <result column="t_user_role" jdbcType="TINYINT" property="role"/>
    </resultMap>

    <resultMap id="nsUserMap" type="com.xybl.server.entity.NsUser">
        <id column="t_ns_id" jdbcType="VARCHAR" property="id"/>
        <result column="t_ns_name" jdbcType="VARCHAR" property="ns_name"/>
        <result column="t_ns_privilege" jdbcType="VARCHAR" property="privilege"/>
        <result column="t_ns_tel" jdbcType="VARCHAR" property="tel"/>
        <result column="t_ns_email" jdbcType="VARCHAR" property="email"/>
    </resultMap>

    <resultMap id="stuUserMap" type="com.xybl.server.entity.Student">
        <id column="t_stu_id" jdbcType="VARCHAR" property="id"/>
        <result column="t_stu_name" jdbcType="VARCHAR" property="stu_name"/>
        <result column="t_stu_tel" jdbcType="VARCHAR" property="tel"/>
        <result column="t_stu_address" jdbcType="VARCHAR" property="address"/>
        <result column="t_stu_email" jdbcType="VARCHAR" property="email"/>
    </resultMap>

    <insert id="addOneUser" parameterType="com.xybl.server.entity.User">
        INSERT INTO t_user(t_user_id, t_user_name, t_user_pwd, t_user_role)
            VALUE (#{id}, #{name}, #{pwd}, #{role});
    </insert>

    <select id="getUserById" parameterType="String" resultMap="baseMap">
        SELECT *
        FROM t_user
        WHERE t_user_id = #{uid};
    </select>

    <select id="getUserByName" parameterType="String" resultMap="baseMap">
        SELECT *
        FROM t_user
        WHERE t_user_name = #{name};
    </select>

    <select id="getLastUserId" resultType="java.util.HashMap">
        SELECT SUBSTRING(t_user_id, 14, 3) as last_id, SUBSTRING(t_user_id, 1, 13) as t_id
        FROM t_user
        WHERE SUBSTRING(t_user_id, 1, 10) > UNIX_TIMESTAMP(CAST(SYSDATE() AS DATE))
        ORDER BY t_id DESC
        LIMIT 1;
    </select>

    <insert id="addOneStu" parameterType="com.xybl.server.entity.Student">
        INSERT INTO t_student(t_stu_id, t_stu_name, t_stu_tel, t_stu_address, t_stu_email)
            VALUE (#{id}, #{stu_name}, #{tel}, #{address}, #{email});
    </insert>

    <insert id="addOneNsu" parameterType="com.xybl.server.entity.NsUser">
        INSERT INTO t_nsuser(t_ns_id, t_ns_name, t_ns_privilege, t_ns_tel, t_ns_email)
        VALUE (#{id}, #{ns_name}, #{privilege}, #{tel}, #{email});
    </insert>

    <delete id="deleteOneUser" parameterType="String">
        DELETE
        FROM t_user
        WHERE t_user_id = #{uid};
    </delete>

    <delete id="deleteOneStu" parameterType="String">
        DELETE
        FROM t_student
        WHERE t_stu_id = #{stu_id};
    </delete>

    <delete id="delOneNsu" parameterType="String">
        DELETE
        FROM t_nsuser
        WHERE t_ns_id = #{nsu_id};
    </delete>

    <select id="getLastNsNameNum" parameterType="String" resultType="String">
        SELECT SUBSTRING(t_user_name, 12, 2) as lastP
        FROM t_user
        WHERE SUBSTRING(t_user_name, 1, 11) = #{sameFront}
        ORDER BY lastP DESC
        LIMIT 1;
    </select>

    <select id="getNsUserById" parameterType="String" resultMap="nsUserMap">
        select *
        from t_nsuser
        where t_ns_id = #{id};
    </select>

    <select id="getStuById" parameterType="String" resultMap="stuUserMap">
        select * from t_student
        where t_stu_id = #{id};
    </select>

    <select id="getLastDmschNameNum" parameterType="String" resultType="String">
        <choose>
            <when test="searchPart==1">
                SELECT SUBSTRING(name, 1, 2) as lastNum
                FROM r_dmsch_name
                ORDER BY lastNum DESC
                LIMIT 1;
            </when>
            <when test="searchPart==2">
                SELECT SUBSTRING(name, 3, 2) as lastNum
                FROM r_dmsch_name
                ORDER BY lastNum DESC
                LIMIT 1;
            </when>
            <when test="searchPart==3">
                SELECT SUBSTRING(name, 5, 3) as lastNum
                FROM r_dmsch_name
                ORDER BY lastNum DESC
                LIMIT 1;
            </when>
            <otherwise>
                SELECT SUBSTRING(name, 8, 3) as lastNum
                FROM r_dmsch_name
                ORDER BY lastNum DESC
                LIMIT 1;
            </otherwise>
        </choose>
    </select>

<!--    public String addOneDmschName(String beNamed, String nameCode);-->
    <insert id="addOneDmschName">
        INSERT INTO r_dmsch_name(dmsch, name)
        value (#{beNamed}, #{nameCode});
    </insert>

    <select id="getDmschName" parameterType="String" resultType="String">
        select dmsch
        from r_dmsch_name
        where name = #{nameCode};
    </select>

    <select id="getSchIdByStuid" parameterType="String" resultType="String">
        select sch_id from r_sch_stu where stu_id=#{id};
    </select>

    <update id="updateStu" parameterType="com.xybl.server.entity.Student">
        update t_student
        <set>
            <if test="stu_name != null and stu_name != ''">
                t_stu_name = #{stu_name},
            </if>
            <if test="tel != null and tel != ''">
                t_stu_tel = #{tel},
            </if>
            <if test="address != null and address != ''">
                t_stu_address = #{address},
            </if>
            <if test="email != null and email != ''">
                t_stu_email = #{email}
            </if>
        </set>
        <where>
            t_stu_id = #{id};
        </where>
    </update>

    <update id="updateNs" parameterType="com.xybl.server.entity.NsUser">
        update t_nsuser
        <set>
            <if test="ns_name != null and ns_name != ''">
                t_ns_name = #{ns_name},
            </if>
            <if test="tel != null and tel != ''">
                t_ns_tel = #{tel},
            </if>
            <if test="privilege != null and privilege != ''">
                t_ns_privilege = #{privilege},
            </if>
            <if test="email != null and email != ''">
                t_ns_email = #{email}
            </if>
        </set>
        <where>
            t_ns_id = #{id};
        </where>
    </update>

    <update id="updateUser" parameterType="com.xybl.server.entity.User">
        update t_user
        <set>
            <if test="name != null and name !=''">
                t_user_name = #{name},
            </if>
            <if test="pwd != null and pwd != ''">
                t_user_pwd = #{pwd}
            </if>
        </set>
        <where>
            t_user_id =#{id};
        </where>
    </update>

    <select id="getDmschNidByNsUid" parameterType="String" resultType="String">
        select dmsch_id from r_ns_dmsch where ns_id = #{nsUid}
    </select>
</mapper>