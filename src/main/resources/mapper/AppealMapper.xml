<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.xybl.server.dao.AppealDao">
    <resultMap id="baseMap" type="com.xybl.server.entity.Appeal">
        <id column="t_al_id" jdbcType="VARCHAR" property="id"/>
        <result column="t_al_time" jdbcType="DATE" property="al_time"/>
        <result column="t_al_address" jdbcType="VARCHAR" property="address"/>
        <result column="t_al_title" jdbcType="CLOB" property="title"/>
        <result column="t_al_detail" jdbcType="CLOB" property="detail"/>
        <result column="t_al_appellant" jdbcType="VARCHAR" property="appellant"/>
        <result column="t_al_filepath" jdbcType="CLOB" property="filepath"/>
        <result column="t_al_real" jdbcType="VARCHAR" property="re_appeal"/>
        <result column="t_al_pos" jdbcType="VARCHAR" property="pos"/>
    </resultMap>

    <!--  public Appeal getOneAppealById(String id);  -->
    <select id="getOneAppealById" parameterType="String" resultMap="baseMap">
        SELECT *
        FROM t_appeal
        <where>
            <if test="id != null and id != ''">
                t_al_id = #{id};
            </if>
        </where>
    </select>

    <!--  public Appeal getOneAppealByAlUserId(String al_id,String user_id);  -->
    <select id="getOneAppealByAlUserId" resultMap="baseMap">
        SELECT *
        FROM t_appeal
        WHERE t_al_id = #{al_id}
          AND t_al_appellant = #{user_id};
    </select>

    <!--  public void addRelAlHandler(String al_id,String smsch_id);  -->
    <insert id="addRelAlHandler">
        INSERT INTO r_al_ns(al_id, dmsch_id) VALUE (#{al_id}, #{dmsch_id});
    </insert>

    <!--  public List<Appeal> getAppealsByDmSchId(String dmsch_id);  -->
    <select id="getAppealsByDmSchId" parameterType="String" resultMap="baseMap">
        SELECT *
        FROM t_appeal
        WHERE t_al_id in (SELECT al_id FROM r_al_ns WHERE dmsch_id = #{dmsch_id});
    </select>

    <!--  public List<Appeal> getAppealsByNsUserId(String user_id);  -->
    <select id="getAppealsByNsUserId" resultMap="baseMap">
        SELECT *
        FROM t_appeal
        <where>
            t_al_id in (SELECT al_id
            FROM r_al_ns
            WHERE SUBSTRING((SELECT t_user_name FROM t_user WHERE t_user_id = r_al_ns.dmsch_id), 1, 10) =
            SUBSTRING((SELECT t_user_name FROM t_user WHERE t_user_id = #{user_id}), 1, 10))
            <if test="is_first==true">
                AND t_al_id NOT IN (SELECT ta_2.t_al_real FROM t_appeal AS ta_2 WHERE t_al_real IS NOT NULL)
            </if>
        </where>
    </select>

    <!--  public List<Appeal> getAppeals();  -->
    <select id="getAppeals" resultMap="baseMap">
        SELECT *
        FROM t_appeal
        ORDER BY t_al_id DESC
        LIMIT 100;
    </select>

    <!--  public void addOneAppeal(Appeal appeal);  -->
    <insert id="addOneAppeal" parameterType="com.xybl.server.entity.Appeal">
        <if test="appellant != null and appellant != '' and id != null and id != ''">
            INSERT INTO t_appeal(t_al_id, t_al_time, t_al_appellant, t_al_address, t_al_pos, t_al_title, t_al_detail,
            t_al_filepath, t_al_real)
            VALUES (#{id}, #{al_time}, #{appellant}, #{address}, #{pos}, #{title}, #{detail}, #{filepath},
            #{re_appeal});
        </if>
    </insert>

    <!--  public void deleteOneAppealById(String id);  -->
    <delete id="deleteOneAppealById">
        DELETE
        FROM t_appeal
        WHERE t_al_id = #{id}
          and t_al_appellant = #{user_id};
    </delete>

    <!--  public void updateOneAppeal(Appeal appeal);  -->
    <update id="updateOneAppeal" parameterType="com.xybl.server.entity.Appeal">
        UPDATE t_appeal
        <set>
            <if test="al_time != null and al_time != ''">
                t_al_time=#{al_time},
            </if>
            <if test="address != null and address != ''">
                t_al_address=#{address},
            </if>
            <if test="title != null and title != ''">
                t_al_title=#{title},
            </if>
            <if test="detail != null and detail != ''">
                t_al_detail=#{detail},
            </if>
            <if test="filepath != null and filepath != ''">
                t_al_filepath=#{filepath},
            </if>
            <if test="pos != null and pos != ''">
                t_al_pos=#{pos},
            </if>
            <if test="re_appeal != null and re_appeal != ''">
                t_al_real=#{re_appeal}
            </if>
        </set>
        <where>
            t_al_id=#{id} and t_al_appellant=#{appellant};
        </where>
    </update>

    <!--  public Map<String,Object> getLastId();  -->
    <select id="getLastId" resultType="java.util.HashMap">
        SELECT SUBSTRING(t_al_id, 14, 3) as last_id, SUBSTRING(t_al_id, 1, 13) as t_id
        FROM t_appeal
        WHERE SUBSTRING(t_al_id, 1, 10) > UNIX_TIMESTAMP(CAST(SYSDATE() AS DATE))
        ORDER BY t_id DESC
        LIMIT 1;
    </select>

    <!--  public void deleteRelAlNsByAlId(String al_id, String user_id);  -->
    <delete id="deleteRelAlNsByAlId">
        DELETE
        FROM r_al_ns
        WHERE al_id = #{al_id}
          and #{user_id} = (SELECT t_al_appellant FROM t_appeal WHERE t_al_id = #{al_id});
    </delete>

    <!-- public List<Appeal> getAppealsByUser_id(String user_id);  -->
    <select id="getAppealsByUser_id" parameterType="String" resultMap="baseMap">
        SELECT *
        FROM t_appeal
        WHERE t_al_appellant = #{user_id};
    </select>

    <!--  public List<Appeal> getUnWatchedAppealsByStu_id(String stu_id);  -->
    <select id="getUnWatchedAppealsByStu_id" resultMap="baseMap">
        SELECT *
        FROM t_appeal
        <where>
            t_al_appellant = #{stu_id}
            AND t_al_id NOT IN (SELECT al_id FROM r_al_rh)
            <if test="is_first">
                AND t_al_id NOT IN (SELECT ta_2.t_al_real FROM t_appeal AS ta_2 WHERE t_al_real IS NOT NULL)
            </if>
        </where>
    </select>

    <!--  public List<Appeal> getUnWatchedAppealsByNs_id(String ns_id);  -->
    <select id="getUnWatchedAppealsByNs_id" resultMap="baseMap">
        SELECT *
        FROM t_appeal
        <where>
            t_al_id IN (SELECT r_al_ns.al_id
            FROM r_al_ns
            WHERE SUBSTRING((SELECT t_user_name FROM t_user WHERE t_user_id = r_al_ns.dmsch_id), 1, 10) =
            SUBSTRING((SELECT t_user_name FROM t_user WHERE t_user_id = #{ns_id}), 1, 10)
            AND r_al_ns.al_id NOT IN (SELECT r_al_rh.al_id FROM r_al_rh))
            <if test="is_first==true">
                AND t_al_id NOT IN (SELECT ta_2.t_al_real FROM t_appeal AS ta_2 WHERE t_al_real IS NOT NULL)
            </if>
        </where>
    </select>

    <!--  List<Appeal> getWatchedAppealsByStu_id(String user_id);  -->
    <select id="getWatchedAppealsByStu_id" resultMap="baseMap">
        SELECT *
        FROM t_appeal
        <where>
            t_al_appellant = #{user_id}
            AND t_al_id IN (SELECT al_id FROM r_al_rh)
            <if test="is_first==true">
                AND t_al_id NOT IN (SELECT ta_2.t_al_real FROM t_appeal AS ta_2 WHERE t_al_real IS NOT NULL)
            </if>
        </where>
    </select>

    <!--  List<Appeal> getNoResultAppealsByStu_id(String user_id);  -->
    <select id="getNoResultAppealsByStu_id" resultMap="baseMap">
        SELECT *
        FROM t_appeal
        <where>
            t_al_appellant = #{user_id}
            AND t_al_id IN
            (SELECT al_id FROM r_al_rh WHERE rh_id IN (SELECT t_rh_id FROM t_research WHERE t_rh_restime IS NULL))
            <if test="is_first==true">
                AND t_al_id NOT IN (SELECT ta_2.t_al_real FROM t_appeal AS ta_2 WHERE t_al_real IS NOT NULL)
            </if>
        </where>
    </select>

    <!--  List<Appeal> getHasResultAppealsByStu_id(String user_id);  -->
    <select id="getHasResultAppealsByStu_id" resultMap="baseMap">
        SELECT *
        FROM t_appeal
        <where>
            t_al_appellant = #{user_id}
            AND t_al_id IN
            (SELECT al_id
            FROM r_al_rh
            WHERE rh_id IN (SELECT t_rh_id FROM t_research WHERE t_rh_restime IS NOT NULL))
            <if test="is_first==true">
                AND t_al_id NOT IN (SELECT ta_2.t_al_real FROM t_appeal AS ta_2 WHERE t_al_real IS NOT NULL)
            </if>
        </where>
    </select>

    <!--   List<Appeal> getRe_appealedAppealsByStu_id(String user_id);  -->
    <select id="getRe_appealedAppealsByStu_id" resultMap="baseMap">
        SELECT *
        FROM t_appeal
        <where>
            t_al_appellant = #{user_id}
            AND t_al_real IS NOT NULL
            <if test="is_first==true">
                AND t_al_id NOT IN (SELECT ta_2.t_al_real FROM t_appeal AS ta_2 WHERE t_al_real IS NOT NULL)
            </if>
        </where>
    </select>

    <!--  List<Appeal> getWatchedAppealsByNs_id(String user_id);  -->
    <select id="getWatchedAppealsByNs_id" resultMap="baseMap">
        SELECT *
        FROM t_appeal
        <where>
            t_al_id IN (SELECT r_al_ns.al_id
            FROM r_al_ns
            WHERE SUBSTRING((SELECT t_user_name FROM t_user WHERE t_user_id = r_al_ns.dmsch_id), 1, 10) =
            SUBSTRING((SELECT t_user_name FROM t_user WHERE t_user_id = #{user_id}), 1, 10)
            AND r_al_ns.al_id IN (SELECT r_al_rh.al_id FROM r_al_rh))
            <if test="is_first==true">
                AND t_al_id NOT IN (SELECT ta_2.t_al_real FROM t_appeal AS ta_2 WHERE t_al_real IS NOT NULL)
            </if>
        </where>
    </select>

    <!--  List<Appeal> getNoResultAppealsByNs_id(String user_id);  -->
    <select id="getNoResultAppealsByNs_id" resultMap="baseMap">
        SELECT *
        FROM t_appeal
        <where>
            t_al_id IN
            (SELECT al_id
            FROM r_al_rh
            WHERE rh_id IN (SELECT t_rh_id
            FROM t_research
            WHERE t_rh_restime IS NULL
            AND SUBSTRING((SELECT t_user_name FROM t_user WHERE t_user_id = #{user_id}), 1, 10) =
            SUBSTRING(
            (SELECT t_user_name FROM t_user WHERE t_user_id = t_research.t_rh_handler),
            1, 10)))
            <if test="is_first==true">
                AND t_al_id NOT IN (SELECT ta_2.t_al_real FROM t_appeal AS ta_2 WHERE t_al_real IS NOT NULL)
            </if>
        </where>
    </select>

    <!--  List<Appeal> getHasResultAppealsByNs_id(String user_id);  -->
    <select id="getHasResultAppealsByNs_id" resultMap="baseMap">
        SELECT *
        FROM t_appeal
        <where>
            t_al_id IN
            (SELECT al_id
            FROM r_al_rh
            WHERE rh_id IN (SELECT t_rh_id
            FROM t_research
            WHERE t_rh_restime IS NOT NULL
            AND SUBSTRING((SELECT t_user_name FROM t_user WHERE t_user_id = #{user_id}), 1, 10) =
            SUBSTRING(
            (SELECT t_user_name FROM t_user WHERE t_user_id = t_research.t_rh_handler),
            1, 10)))
            <if test="is_first==true">
                AND t_al_id NOT IN (SELECT ta_2.t_al_real FROM t_appeal AS ta_2 WHERE t_al_real IS NOT NULL)
            </if>
        </where>
    </select>

    <!--  List<Appeal> searchForAppealsByKeywords(String user_id, String keys);  -->
    <select id="searchForAppealsByKeywords" resultMap="baseMap">
        SELECT *
        FROM t_appeal
        <where>
            t_al_id IN (SELECT r_al_ns.al_id
            FROM r_al_ns
            WHERE SUBSTRING((SELECT t_user_name FROM t_user WHERE t_user_id = r_al_ns.dmsch_id), 1,
            10) =
            SUBSTRING((SELECT t_user_name FROM t_user WHERE t_user_id = #{user_id}), 1, 10))
            AND (t_al_detail LIKE CONCAT('%', #{keys}, '%')
            OR t_al_title LIKE CONCAT('%', #{keys}, '%')
            OR t_al_address LIKE CONCAT('%', #{keys}, '%')
            OR t_al_appellant IN (SELECT t_user_id FROM t_user WHERE t_user_name LIKE CONCAT('%', #{keys}, '%')))
            <if test="is_first==true">
                AND t_al_id NOT IN (SELECT ta_2.t_al_real FROM t_appeal AS ta_2 WHERE t_al_real IS NOT NULL)
            </if>
        </where>
    </select>

    <select id="getAppealByRh_id" parameterType="String" resultMap="baseMap">
        SELECT *
        FROM t_appeal
        WHERE t_al_id = (SELECT al_id FROM r_al_rh WHERE rh_id = #{rh_id});
    </select>

    <select id="getAppealsWaitForAuditing" resultMap="baseMap">
        SELECT *
        FROM t_appeal
        <where>
            t_al_id IN (SELECT al_id
            FROM r_al_rh
            WHERE rh_id IN (SELECT t_rh_id
            FROM t_research
            WHERE SUBSTRING((SELECT t_user_name FROM t_user WHERE t_user_id = #{user_id}),
            1, 10) = SUBSTRING(
            (SELECT t_user_name FROM t_user WHERE t_user_id = t_rh_auditor),
            1, 10)
            AND t_rh_autime IS NULL))
            <if test="is_first==true">
                AND t_al_id NOT IN (SELECT ta_2.t_al_real FROM t_appeal AS ta_2 WHERE t_al_real IS NOT NULL)
            </if>
        </where>
    </select>

    <select id="getAppealsHasAudited" resultMap="baseMap">
        SELECT *
        FROM t_appeal
        <where>
            t_al_id IN (SELECT al_id
            FROM r_al_rh
            WHERE rh_id IN (SELECT t_rh_id
            FROM t_research
            WHERE SUBSTRING((SELECT t_user_name FROM t_user WHERE t_user_id = #{user_id}),
            1, 10) = SUBSTRING(
            (SELECT t_user_name FROM t_user WHERE t_user_id = t_rh_auditor),
            1, 10)
            AND t_rh_autime IS NOT NULL))
            <if test="is_first==true">
                AND t_al_id NOT IN (SELECT ta_2.t_al_real FROM t_appeal AS ta_2 WHERE t_al_real IS NOT NULL)
            </if>
        </where>
    </select>

    <select id="getAppealsWaitForComment" resultMap="baseMap">
        SELECT *
        FROM t_appeal
        <where>
            t_al_id IN (SELECT al_id
            FROM r_al_rh
            WHERE rh_id IN (SELECT t_rh_id
            FROM t_research
            WHERE (SUBSTRING((SELECT t_user_name FROM t_user WHERE t_user_id = #{user_id}),
            1, 10) = SUBSTRING(
            (SELECT t_user_name FROM t_user WHERE t_user_id = t_rh_auditor),
            1, 10) OR SUBSTRING((SELECT t_user_name FROM t_user WHERE t_user_id = #{user_id}),1, 10) = SUBSTRING((SELECT
            t_user_name FROM t_user WHERE t_user_id =t_rh_handler),1, 10))
            AND t_rh_appcomment IS NULL))
            <if test="is_first==true">
                AND t_al_id NOT IN (SELECT ta_2.t_al_real FROM t_appeal AS ta_2 WHERE t_al_real IS NOT NULL)
            </if>
        </where>
    </select>

    <select id="getAppealsHasCommented" resultMap="baseMap">
        SELECT *
        FROM t_appeal
        <where>
            t_al_id IN
            (SELECT al_id
            FROM r_al_rh
            WHERE rh_id IN
            (SELECT t_rh_id
            FROM t_research
            WHERE
            (SUBSTRING((SELECT t_user_name FROM t_user WHERE t_user_id = #{user_id}),1, 10) =
            SUBSTRING((SELECT t_user_name FROM t_user WHERE t_user_id = t_rh_auditor),1, 10) OR SUBSTRING((SELECT
            t_user_name FROM t_user WHERE t_user_id = #{user_id}),1, 10) = SUBSTRING((SELECT
            t_user_name FROM t_user WHERE t_user_id =t_rh_handler),1, 10))
            AND t_rh_appcomment IS NOT NULL))
            <if test="is_first==true">
                AND t_al_id NOT IN (SELECT ta_2.t_al_real FROM t_appeal AS ta_2 WHERE t_al_real IS NOT NULL)
            </if>
        </where>
    </select>

    <select id="getFirstAppealsByStu_id" parameterType="String" resultMap="baseMap">
        SELECT *
        FROM t_appeal
        WHERE t_al_appellant = #{user_id}
          AND t_al_id NOT IN (SELECT ta_2.t_al_real FROM t_appeal AS ta_2 WHERE t_al_real IS NOT NULL);
    </select>

    <select id="getFirstAppealByNs_id" parameterType="String" resultMap="baseMap">
        SELECT *
        FROM t_appeal
        WHERE t_al_id NOT IN (SELECT ta_2.t_al_real FROM t_appeal AS ta_2 WHERE t_al_real IS NOT NULL)
          AND t_al_id IN (SELECT al_id
                          FROM r_al_ns
                          WHERE SUBSTRING((SELECT t_user_name FROM t_user WHERE t_user_id = #{user_id}), 1, 10) =
                                SUBSTRING((SELECT t_user_name FROM t_user WHERE t_user_id = r_al_ns.dmsch_id), 1, 10));
    </select>
</mapper>